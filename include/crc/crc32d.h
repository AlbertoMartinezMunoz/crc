#ifndef CRC_CRC32D_H
#define CRC_CRC32D_H

#include <crc/crc.h>

class Crc32D : public Crc<uint32_t>
{
public:
    /**
     * Will construct a CRC class of type CRC16/USB
     */
    Crc32D() : Crc<uint32_t>(m_lookupTable, m_initialRemainder, m_finalXorValue) {}

private:
    uint8_t reflectData(uint8_t data) override
    {
        return Crc<uint32_t>::reflect(data, 8);
    }

    uint32_t reflectRemainder(uint32_t remainder) override
    {
        return Crc<uint32_t>::reflect(remainder, Crc::m_typeBits);
    }

private:
    uint32_t m_lookupTable[256] = {
            0x00000000, 0xA833982B, 0xF854A87D, 0x50673056, 0x589AC8D1, 0xF0A950FA, 0xA0CE60AC, 0x08FDF887,
            0xB13591A2, 0x19060989, 0x496139DF, 0xE152A1F4, 0xE9AF5973, 0x419CC158, 0x11FBF10E, 0xB9C86925,
            0xCA58BB6F, 0x626B2344, 0x320C1312, 0x9A3F8B39, 0x92C273BE, 0x3AF1EB95, 0x6A96DBC3, 0xC2A543E8,
            0x7B6D2ACD, 0xD35EB2E6, 0x833982B0, 0x2B0A1A9B, 0x23F7E21C, 0x8BC47A37, 0xDBA34A61, 0x7390D24A,
            0x3C82EEF5, 0x94B176DE, 0xC4D64688, 0x6CE5DEA3, 0x64182624, 0xCC2BBE0F, 0x9C4C8E59, 0x347F1672,
            0x8DB77F57, 0x2584E77C, 0x75E3D72A, 0xDDD04F01, 0xD52DB786, 0x7D1E2FAD, 0x2D791FFB, 0x854A87D0,
            0xF6DA559A, 0x5EE9CDB1, 0x0E8EFDE7, 0xA6BD65CC, 0xAE409D4B, 0x06730560, 0x56143536, 0xFE27AD1D,
            0x47EFC438, 0xEFDC5C13, 0xBFBB6C45, 0x1788F46E, 0x1F750CE9, 0xB74694C2, 0xE721A494, 0x4F123CBF,
            0x7905DDEA, 0xD13645C1, 0x81517597, 0x2962EDBC, 0x219F153B, 0x89AC8D10, 0xD9CBBD46, 0x71F8256D,
            0xC8304C48, 0x6003D463, 0x3064E435, 0x98577C1E, 0x90AA8499, 0x38991CB2, 0x68FE2CE4, 0xC0CDB4CF,
            0xB35D6685, 0x1B6EFEAE, 0x4B09CEF8, 0xE33A56D3, 0xEBC7AE54, 0x43F4367F, 0x13930629, 0xBBA09E02,
            0x0268F727, 0xAA5B6F0C, 0xFA3C5F5A, 0x520FC771, 0x5AF23FF6, 0xF2C1A7DD, 0xA2A6978B, 0x0A950FA0,
            0x4587331F, 0xEDB4AB34, 0xBDD39B62, 0x15E00349, 0x1D1DFBCE, 0xB52E63E5, 0xE54953B3, 0x4D7ACB98,
            0xF4B2A2BD, 0x5C813A96, 0x0CE60AC0, 0xA4D592EB, 0xAC286A6C, 0x041BF247, 0x547CC211, 0xFC4F5A3A,
            0x8FDF8870, 0x27EC105B, 0x778B200D, 0xDFB8B826, 0xD74540A1, 0x7F76D88A, 0x2F11E8DC, 0x872270F7,
            0x3EEA19D2, 0x96D981F9, 0xC6BEB1AF, 0x6E8D2984, 0x6670D103, 0xCE434928, 0x9E24797E, 0x3617E155,
            0xF20BBBD4, 0x5A3823FF, 0x0A5F13A9, 0xA26C8B82, 0xAA917305, 0x02A2EB2E, 0x52C5DB78, 0xFAF64353,
            0x433E2A76, 0xEB0DB25D, 0xBB6A820B, 0x13591A20, 0x1BA4E2A7, 0xB3977A8C, 0xE3F04ADA, 0x4BC3D2F1,
            0x385300BB, 0x90609890, 0xC007A8C6, 0x683430ED, 0x60C9C86A, 0xC8FA5041, 0x989D6017, 0x30AEF83C,
            0x89669119, 0x21550932, 0x71323964, 0xD901A14F, 0xD1FC59C8, 0x79CFC1E3, 0x29A8F1B5, 0x819B699E,
            0xCE895521, 0x66BACD0A, 0x36DDFD5C, 0x9EEE6577, 0x96139DF0, 0x3E2005DB, 0x6E47358D, 0xC674ADA6,
            0x7FBCC483, 0xD78F5CA8, 0x87E86CFE, 0x2FDBF4D5, 0x27260C52, 0x8F159479, 0xDF72A42F, 0x77413C04,
            0x04D1EE4E, 0xACE27665, 0xFC854633, 0x54B6DE18, 0x5C4B269F, 0xF478BEB4, 0xA41F8EE2, 0x0C2C16C9,
            0xB5E47FEC, 0x1DD7E7C7, 0x4DB0D791, 0xE5834FBA, 0xED7EB73D, 0x454D2F16, 0x152A1F40, 0xBD19876B,
            0x8B0E663E, 0x233DFE15, 0x735ACE43, 0xDB695668, 0xD394AEEF, 0x7BA736C4, 0x2BC00692, 0x83F39EB9,
            0x3A3BF79C, 0x92086FB7, 0xC26F5FE1, 0x6A5CC7CA, 0x62A13F4D, 0xCA92A766, 0x9AF59730, 0x32C60F1B,
            0x4156DD51, 0xE965457A, 0xB902752C, 0x1131ED07, 0x19CC1580, 0xB1FF8DAB, 0xE198BDFD, 0x49AB25D6,
            0xF0634CF3, 0x5850D4D8, 0x0837E48E, 0xA0047CA5, 0xA8F98422, 0x00CA1C09, 0x50AD2C5F, 0xF89EB474,
            0xB78C88CB, 0x1FBF10E0, 0x4FD820B6, 0xE7EBB89D, 0xEF16401A, 0x4725D831, 0x1742E867, 0xBF71704C,
            0x06B91969, 0xAE8A8142, 0xFEEDB114, 0x56DE293F, 0x5E23D1B8, 0xF6104993, 0xA67779C5, 0x0E44E1EE,
            0x7DD433A4, 0xD5E7AB8F, 0x85809BD9, 0x2DB303F2, 0x254EFB75, 0x8D7D635E, 0xDD1A5308, 0x7529CB23,
            0xCCE1A206, 0x64D23A2D, 0x34B50A7B, 0x9C869250, 0x947B6AD7, 0x3C48F2FC, 0x6C2FC2AA, 0xC41C5A81 };

    static const uint32_t m_finalXorValue = 0xFFFFFFFF;
    static const uint32_t m_initialRemainder = 0xFFFFFFFF;
};


#endif //CRC_CRC32D_H
